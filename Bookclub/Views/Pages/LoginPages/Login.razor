@page  "/"
@using Bookclub.Services.Users
@using Bookclub.Models.Users
@using Newtonsoft.Json
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IUserService userService 
@inject IJSRuntime jsRunTime

<EditForm Model="@user" OnValidSubmit="@ValidateUser">
    <div>
        <br /><br /><br /><br /><br />
    </div>
    <div>
        <h3 style="font-weight:bold; color:purple">Book Stores Login</h3>
    </div>
    <div>
        <br />
    </div>
    <div class="col-12 row">
        <input class="form-control col-12" @bind="user.EmailAddress" placeholder="email address" />
    </div>
    <br />
    <div class="col-12 row">
        <input type="password" class="form-control col-12" @bind="user.Password" placeholder="password" />
    </div>
    <br />
    <div class="col-12 row">
        <span class="col-12"></span>
        <input type="submit" class="form-control col-6 btn btn-primary" value="Login" />
        <a href="/signup" class="col-3">Sign up</a>
    </div>
    <br />
    <div class="col-12 row" style="text-align:left; font-weight:bold">
        <span class="col-12">@LoginMesssage</span>
    </div>
</EditForm>

@code {

    private User user;


    protected override Task OnInitializedAsync()
    {
        user = new User();
        return base.OnInitializedAsync();
       
    }

    private async Task<bool> ValidateUser()
    {
        // if user is valid call api

        return await Task.FromResult(true);
    }

}